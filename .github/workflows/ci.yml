name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "32 4 * * 5"

jobs:
  Rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: |
          set -eu
          for PKG in \
            askama_web askama_web_derive \
            test-actix-web-4 test-axum-0.7 test-axum-0.8 test-poem-3 test-rocket-0.5 test-salvo-0.76 \
            test-salvo-0.77 test-trillium-0.2 test-viz-0.10 test-warp-0.3 \
            test-axum-0.8-no-derive
          do
            cd "$PKG"
            echo "Testing: $PKG"
            cargo +nightly fmt -- --check
            cd - > /dev/null
          done

  Docs:
    strategy:
      matrix:
        package: [askama_web, askama_web_derive]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - run: cd ${{ matrix.package }} && cargo doc --all-features --no-deps
        env:
          RUSTDOCFLAGS: -Z unstable-options --generate-link-to-definition --cfg=docsrs -D warnings

  Audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2

  Typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master

  DevSkim:
    name: DevSkim
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: devskim-results.sarif

  CargoSort:
    name: Check order in Cargo.toml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-sort
      - run: |
          cargo sort --check --check-format --grouped
          set -eu
          for PKG in \
            askama_web askama_web_derive \
            test-actix-web-4 test-axum-0.7 test-axum-0.8 test-poem-3 test-rocket-0.5 test-salvo-0.76 \
            test-salvo-0.77 test-trillium-0.2 test-viz-0.10 test-warp-0.3 \
            test-axum-0.8-no-derive
          do
            cd "$PKG"
            echo "Testing: $PKG"
            cargo sort --check --check-format --grouped .
            cd - > /dev/null
          done

  Package:
    strategy:
      matrix:
        package: [
            askama_web, askama_web_derive,
            test-actix-web-4, test-axum-0.7, test-axum-0.8, test-poem-3, test-rocket-0.5, test-salvo-0.76,
            test-salvo-0.77, test-trillium-0.2, test-viz-0.10, test-warp-0.3,
            test-axum-0.8-no-derive,
        ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: Swatinem/rust-cache@v2
      - run: cd ${{ matrix.package }} && cargo build --all-targets
      - run: cd ${{ matrix.package }} && cargo nextest run --all-targets --no-fail-fast --no-tests=warn
      - run: cd ${{ matrix.package }} && cargo clippy --all-targets -- -D warnings

  MSRV:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.81.0"
      - run: cargo check --lib -p askama_web
